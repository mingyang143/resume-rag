# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Resume Management System Specific
# ===================================

# Environment variables (NEVER commit secrets!)
.env
.env.local
.env.production
.env.staging
.env.development

# Resume data directories
resume_analyzer/resumes/
resume_analyzer/resumes/resumes_normal/
resume_analyzer/resumes/resumes_mikomiko/
resumes/
data/resumes/

# Vector store and embeddings
resume_analyzer/ingestion/vectorstore/
vectorstore/
*.chroma/
*.faiss
*.bin
*.pkl
resume_faiss_index.bin
resume_faiss_metadata.pkl
chroma_db/

# Database files
*.db
*.sqlite
*.sqlite3

# Log files
*.log
logs/
resume_analyzer/logs/

# Temporary files
tmp/
temp/
*.tmp
*.temp
.streamlit/secrets.toml

# LibreOffice temp files
.~lock.*

# PDF conversion temp files
*.jpg
*.jpeg
*.png
temp_images/

# IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Backup files
*.bak
*.backup
*.orig

# API keys and credentials
credentials.json
api_keys.txt
config/secrets.yaml

# Model files (if storing locally)
models/
*.onnx
*.pt
*.pth
*.h5
*.hdf5

# Large datasets
datasets/
data/raw/
data/processed/

# Streamlit specific
.streamlit/config.toml
.streamlit/credentials.toml

# Docker
Dockerfile.local
docker-compose.override.yml

# Node modules (if using any JS tools)
node_modules/
package-lock.json
yarn.lock

# Test artifacts
test_results/
coverage_reports/

# Documentation build
docs/build/
site/

# Profiling data
*.prof

# Application specific temp files
extracted_images/
converted_pdfs/
processing_temp/